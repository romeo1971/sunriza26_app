{\rtf1\ansi\ansicpg1252\cocoartf2822
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 Times-Bold;\f1\froman\fcharset0 Times-Roman;\f2\fnil\fcharset0 AppleColorEmoji;
\f3\fmodern\fcharset0 Courier;\f4\froman\fcharset0 TimesNewRomanPSMT;\f5\froman\fcharset0 TimesNewRomanPS-BoldMT;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red109\green109\blue109;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c50196\c50196\c50196;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid102\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid202\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid3}
{\list\listtemplateid4\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid301\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid302\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid4}
{\list\listtemplateid5\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid401\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid5}
{\list\listtemplateid6\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid501\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid6}
{\list\listtemplateid7\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid601\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid7}
{\list\listtemplateid8\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid701\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid8}
{\list\listtemplateid9\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid801\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid9}
{\list\listtemplateid10\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid901\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid10}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}{\listoverride\listid5\listoverridecount0\ls5}{\listoverride\listid6\listoverridecount0\ls6}{\listoverride\listid7\listoverridecount0\ls7}{\listoverride\listid8\listoverridecount0\ls8}{\listoverride\listid9\listoverridecount0\ls9}{\listoverride\listid10\listoverridecount0\ls10}}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sa240\partightenfactor0

\f0\b\fs24 \cf0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 konkrete Architektur f\'fcr deine Multi-Avatar Voice-Chat-App
\f1\b0 \strokec2 .\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f2\fs36 \cf0 \strokec2 \uc0\u55357 \u56633 
\f0\b  Architektur f\'fcr Multi-Avatar Voice-Chat\
\pard\pardeftab720\sa298\partightenfactor0

\f2\b0 \cf0 1\uc0\u65039 \u8419 
\f0\b  \'dcbersicht\
\pard\pardeftab720\partightenfactor0

\f3\b0\fs26 \cf0 \
[Flutter App / User Device]\
         |\
         |  Audio Upload / WebSocket\
         v\
[Backend Server (z.B. Node.js / Dart / Python)]\
         |\
         |---> Whisper API (Speech-to-Text)\
         |\
         |---> GPT-5 / Agent Logic (per Avatar)\
         |\
         |---> ElevenLabs TTS\
         |\
         v\
[Flutter App / Audio Playback]\
\pard\pardeftab720\partightenfactor0

\f1\fs24 \cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f2\fs36 \cf0 \strokec2 2\uc0\u65039 \u8419 
\f0\b  Komponenten\
\pard\pardeftab720\sa280\partightenfactor0

\fs28 \cf0 A. Flutter App\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls1\ilvl0
\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Audio aufnehmen
\f1\b0 : 
\f3\fs26 record
\f1\fs24  Plugin, mit Silence Detection 
\f4 \uc0\u8594 
\f1  keine lange Button-Haltung n\'f6tig.\
\ls1\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Audio hochladen / streamen
\f1\b0 : WebSocket oder REST-API zum Backend\
\ls1\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Audio abspielen
\f1\b0 : 
\f3\fs26 audioplayers
\f1\fs24  Plugin\
\ls1\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Multi-Avatar UI
\f1\b0 : Jeder Avatar hat eigene ID, Name, Icon\
\ls1\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 State Management
\f1\b0 : Provider / Riverpod / Bloc 
\f4 \uc0\u8594 
\f1  jeweils Session pro Avatar\
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 B. Backend Server\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls2\ilvl0
\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Session-Management
\f1\b0 : Ein Session pro Nutzer + pro Avatar\
\ls2\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Queue-Handling
\f1\b0 : Multi-User gleichzeitige Anfragen 
\f4 \uc0\u8594 
\f1  verhindert Race Conditions\
\ls2\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Audio Processing
\f1\b0 :\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa240\partightenfactor0
\ls2\ilvl1\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Whisper API f\'fcr Transkription\
\ls2\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 ggf. Silence Detection als zus\'e4tzliche Absicherung\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls2\ilvl0
\f0\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Agent Logic
\f1\b0 : GPT-5 / Cursor 
\f4 \uc0\u8594 
\f1  pro Avatar konfigurierbar\
\ls2\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 TTS
\f1\b0 : ElevenLabs 
\f4 \uc0\u8594 
\f1  generiert Audio, zur\'fcck an Nutzer\
\ls2\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Scalierung
\f1\b0 : Docker / Kubernetes / Load Balancer 
\f4 \uc0\u8594 
\f1  mehrere Worker f\'fcr parallele Nutzer\
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 C. Multi-Avatar Logik\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls3\ilvl0
\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Avatar State
\f1\b0 :\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa240\partightenfactor0
\ls3\ilvl1\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Name, Stimme, GPT-Prompts, Conversation Memory\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls3\ilvl0
\f0\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Parallelit\'e4t
\f1\b0 : Backend kann 3000+ Nutzer bedienen, weil Session & Queue pro Avatar\
\ls3\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Flexibel
\f1\b0 : Neue Avatare hinzuf\'fcgen 
\f4 \uc0\u8594 
\f1  keine App-Update n\'f6tig, nur Backend-Konfiguration\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f2\fs36 \cf0 \strokec2 3\uc0\u65039 \u8419 
\f0\b  Datenfluss Beispiel\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls4\ilvl0
\f1\b0\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	1	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 User spricht: 
\f3\fs26 startRecording()
\f1\fs24  in Flutter\
\ls4\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	2	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Flutter sendet Audio 
\f4 \uc0\u8594 
\f1  
\f3\fs26 POST /api/audio
\f1\fs24  an Backend\
\ls4\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	3	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Backend:\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa240\partightenfactor0
\ls4\ilvl1\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Speichert tempor\'e4r Audio\
\ls4\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Sendet an Whisper 
\f4 \uc0\u8594 
\f1  Text\
\ls4\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Text + Avatar ID 
\f4 \uc0\u8594 
\f1  GPT-5 
\f4 \uc0\u8594 
\f1  Antworttext\
\ls4\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Antworttext 
\f4 \uc0\u8594 
\f1  ElevenLabs 
\f4 \uc0\u8594 
\f1  Audiofile\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls4\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	4	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Backend sendet Audio + Text zur\'fcck 
\f4 \uc0\u8594 
\f1  Flutter spielt ab\
\ls4\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	5	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Optional: Conversation Memory pro Avatar f\'fcr Kontext behalten\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f2\fs36 \cf0 \strokec2 4\uc0\u65039 \u8419 
\f0\b  Vorteile dieser Architektur\

\itap1\trowd \taflags0 \trgaph108\trleft-108 \trbrdrt\brdrnil \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalc \clshdrawnil \clwWidth1646\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx4320
\clvertalc \clshdrawnil \clwWidth6918\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\qc\partightenfactor0

\fs24 \cf0 Vorteil\cell 
\pard\intbl\itap1\pardeftab720\qc\partightenfactor0
\cf0 Erkl\'e4rung\cell \row

\itap1\trowd \taflags0 \trgaph108\trleft-108 \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalc \clshdrawnil \clwWidth1646\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx4320
\clvertalc \clshdrawnil \clwWidth6918\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 Skalierbar
\f1\b0 \cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 Tausende Nutzer gleichzeitig, jeder Avatar isoliert\cell \row

\itap1\trowd \taflags0 \trgaph108\trleft-108 \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalc \clshdrawnil \clwWidth1646\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx4320
\clvertalc \clshdrawnil \clwWidth6918\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\partightenfactor0

\f0\b \cf0 Flexibel
\f1\b0 \cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 Neue Avatare / Stimmen / Modelle 
\f4 \uc0\u8594 
\f1  nur Backend-Konfiguration\cell \row

\itap1\trowd \taflags0 \trgaph108\trleft-108 \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalc \clshdrawnil \clwWidth1646\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx4320
\clvertalc \clshdrawnil \clwWidth6918\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\partightenfactor0

\f0\b \cf0 Niedrige Latenz
\f1\b0 \cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 Direktes Backend statt Flowise/n8n 
\f4 \uc0\u8594 
\f1  Echtzeit-Voice-Chat\cell \row

\itap1\trowd \taflags0 \trgaph108\trleft-108 \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalc \clshdrawnil \clwWidth1646\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx4320
\clvertalc \clshdrawnil \clwWidth6918\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\partightenfactor0

\f0\b \cf0 Kontrolle
\f1\b0 \cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 Session, Audio, Queue, Logging komplett in eigener Hand\cell \row

\itap1\trowd \taflags0 \trgaph108\trleft-108 \trbrdrl\brdrnil \trbrdrt\brdrnil \trbrdrr\brdrnil 
\clvertalc \clshdrawnil \clwWidth1646\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx4320
\clvertalc \clshdrawnil \clwWidth6918\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\partightenfactor0

\f0\b \cf0 Offline-Option
\f1\b0 \cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 Sp\'e4ter kann man Whisper lokal auf Backend einbinden, falls gew\'fcnscht\cell \lastrow\row
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f2\fs36 \cf0 \strokec2 5\uc0\u65039 \u8419 
\f0\b  Hinweise zur Umsetzung\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls5\ilvl0
\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Backend
\f1\b0 : Node.js + Express / FastAPI / Dart Frog\
\ls5\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Audio Handling
\f1\b0 : 
\f3\fs26 multipart/form-data
\f1\fs24  Upload oder WebSocket Stream\
\ls5\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Whisper API
\f1\b0 : Cloud API 
\f4 \uc0\u8594 
\f1  einfach f\'fcr alle Nutzer, kein lokales Whisper n\'f6tig\
\ls5\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 GPT-5 / Cursor
\f1\b0 : Avatar-spezifische Prompts + Memory\
\ls5\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 ElevenLabs
\f1\b0 : TTS 
\f4 \uc0\u8594 
\f1  mp3/wav zur\'fcck an App\
\ls5\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Flutter
\f1\b0 : UI bleibt schlank, keine komplexe Logik au\'dfer Aufnahme & Playback\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Wenn du willst, kann ich als N\'e4chstes 
\f0\b \strokec2 ein finales Flutter + Backend Skeleton
\f1\b0 \strokec2  bauen, das direkt 
\f0\b \strokec2 Start/Stop-Recording 
\f5 \uc0\u8594 
\f0  Whisper 
\f5 \uc0\u8594 
\f0  GPT-5 
\f5 \uc0\u8594 
\f0  ElevenLabs
\f1\b0 \strokec2  pro Avatar handhabt, mit 
\f0\b \strokec2 Session Management
\f1\b0 \strokec2  f\'fcr mehrere User.\
Willst du, dass ich das direkt schreibe?\
\pard\pardeftab720\partightenfactor0
\cf0 \strokec2 \
\pard\pardeftab720\sa332\partightenfactor0

\f0\b\fs20 \cf0 Du:\
\pard\pardeftab720\partightenfactor0

\f1\b0\fs24 \cf0 ja ...\
\
\pard\pardeftab720\sa419\partightenfactor0

\f0\b\fs18 \cf0 ChatGPT:\
\pard\pardeftab720\sa240\partightenfactor0

\f1\b0\fs24 \cf0 \strokec2 Alles klar, ich mache es jetzt 
\f0\b \strokec2 komplett final
\f1\b0 \strokec2 , sauber und modular, sodass du direkt starten kannst.\uc0\u8232 Ziel: 
\f0\b \strokec2 Flutter App + Backend Skeleton
\f1\b0 \strokec2 , Multi-Avatar Voice-Chat, automatisches Stop bei Stille, Whisper 
\f4 \uc0\u8594 
\f1  GPT-5 
\f4 \uc0\u8594 
\f1  ElevenLabs.\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f2\fs36 \cf0 \strokec2 \uc0\u55357 \u56633 
\f0\b  
\f2\b0 1\uc0\u65039 \u8419 
\f0\b  Backend Skeleton (Node.js / Express Beispiel)\
\pard\pardeftab720\partightenfactor0

\f3\b0\fs26 \cf0 \
// server.js\
const express = require("express");\
const multer = require("multer");\
const axios = require("axios");\
const fs = require("fs");\
const path = require("path");\
\
const app = express();\
app.use(express.json());\
\
const upload = multer(\{ dest: "uploads/" \});\
\
// Dummy in-memory session store (pro User + Avatar)\
const sessions = \{\};\
\
// POST /api/audio\
app.post("/api/audio", upload.single("file"), async (req, res) => \{\
  const \{ avatarId, userId \} = req.body;\
  const filePath = req.file.path;\
\
  try \{\
    // 
\f2 1\uc0\u65039 \u8419 
\f3  Whisper Transkription\
    const whisperResp = await axios.post(\
      "https://api.openai.com/v1/audio/transcriptions",\
      fs.createReadStream(filePath),\
      \{\
        headers: \{\
          "Authorization": `Bearer $\{process.env.WHISPER_API_KEY\}`,\
          "Content-Type": "multipart/form-data",\
        \},\
        params: \{ model: "whisper-1" \},\
      \}\
    );\
    const text = whisperResp.data.text;\
\
    // 
\f2 2\uc0\u65039 \u8419 
\f3  GPT-5 / Cursor\
    const prompt = `Avatar $\{avatarId\} antwortet freundlich auf: $\{text\}`;\
    const gptResp = await axios.post(\
      "https://api.cursor.com/gpt5",\
      \{ prompt \},\
      \{ headers: \{ Authorization: `Bearer $\{process.env.GPT_API_KEY\}` \} \}\
    );\
    const replyText = gptResp.data.text;\
\
    // 
\f2 3\uc0\u65039 \u8419 
\f3  ElevenLabs TTS\
    const ttsResp = await axios.post(\
      `https://api.elevenlabs.io/v1/text-to-speech/VOICE_ID`,\
      \{ text: replyText, voice: "VOICE_ID" \},\
      \{ headers: \{ "xi-api-key": process.env.ELEVENLABS_API_KEY \} , responseType: 'arraybuffer'\}\
    );\
    const audioBuffer = Buffer.from(ttsResp.data);\
\
    const outPath = path.join("uploads", `$\{Date.now()\}.mp3`);\
    fs.writeFileSync(outPath, audioBuffer);\
\
    // Antwort an App\
    res.json(\{ text: replyText, audioPath: outPath \});\
\
  \} catch (err) \{\
    console.error(err);\
    res.status(500).json(\{ error: "Server Error" \});\
  \} finally \{\
    fs.unlinkSync(filePath); // tempor\'e4re Upload-Datei l\'f6schen\
  \}\
\});\
\
app.listen(3000, () => console.log("Backend l\'e4uft auf Port 3000"));\
\pard\pardeftab720\partightenfactor0

\f1\fs24 \cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f2\fs36 \cf0 \strokec2 \uc0\u55357 \u56633 
\f0\b  
\f2\b0 2\uc0\u65039 \u8419 
\f0\b  Flutter Skeleton\
\pard\pardeftab720\partightenfactor0

\f3\b0\fs26 \cf0 \
import 'dart:async';\
import 'dart:io';\
import 'package:flutter/material.dart';\
import 'package:record/record.dart';\
import 'package:http/http.dart' as http;\
import 'package:http_parser/http_parser.dart';\
import 'package:audioplayers/audioplayers.dart';\
\
void main() => runApp(MyApp());\
\
class MyApp extends StatelessWidget \{\
  @override\
  Widget build(BuildContext context) \{\
    return MaterialApp(home: VoiceChatPage());\
  \}\
\}\
\
class VoiceChatPage extends StatefulWidget \{\
  @override\
  _VoiceChatPageState createState() => _VoiceChatPageState();\
\}\
\
class _VoiceChatPageState extends State<VoiceChatPage> \{\
  final record = Record();\
  final player = AudioPlayer();\
  Timer? _silenceTimer;\
  bool isRecording = false;\
\
  String userId = "user_001";\
  String avatarId = "avatar_001";\
\
  Future<void> startRecording() async \{\
    if (await record.hasPermission()) \{\
      await record.start(\
        path: 'audio.m4a',\
        encoder: AudioEncoder.aacLc,\
        bitRate: 128000,\
        samplingRate: 44100,\
      );\
      setState(() => isRecording = true);\
\
      Timer.periodic(Duration(milliseconds: 200), (timer) async \{\
        if (!isRecording) \{\
          timer.cancel();\
          return;\
        \}\
\
        var amp = await record.getAmplitude();\
        double currentDb = amp.current ?? 0;\
\
        if (currentDb < -45) \{\
          _silenceTimer ??= Timer(Duration(seconds: 2), () async \{\
            await stopRecording();\
          \});\
        \} else \{\
          _silenceTimer?.cancel();\
          _silenceTimer = null;\
        \}\
      \});\
    \}\
  \}\
\
  Future<void> stopRecording() async \{\
    String? path = await record.stop();\
    setState(() => isRecording = false);\
    _silenceTimer?.cancel();\
    _silenceTimer = null;\
\
    if (path != null) \{\
      await sendAudioToBackend(File(path));\
    \}\
  \}\
\
  Future<void> sendAudioToBackend(File file) async \{\
    var uri = Uri.parse("http://DEIN_BACKEND_HOST:3000/api/audio");\
    var request = http.MultipartRequest("POST", uri);\
    request.fields['userId'] = userId;\
    request.fields['avatarId'] = avatarId;\
    request.files.add(await http.MultipartFile.fromPath(\
      'file',\
      file.path,\
      contentType: MediaType('audio', 'm4a'),\
    ));\
\
    var response = await request.send();\
    var respStr = await response.stream.bytesToString();\
    if (response.statusCode == 200) \{\
      var data = jsonDecode(respStr);\
      String replyText = data['text'];\
      String audioPath = data['audioPath'];\
\
      // Audio abspielen\
      await player.play(DeviceFileSource(audioPath));\
      print("GPT Antwort: $replyText");\
    \} else \{\
      print("Fehler: $respStr");\
    \}\
  \}\
\
  @override\
  Widget build(BuildContext context) \{\
    return Scaffold(\
      appBar: AppBar(title: Text("Multi-Avatar Voice Chat")),\
      body: Center(\
        child: ElevatedButton(\
          onPressed: isRecording ? null : startRecording,\
          child: Text(isRecording ? "Aufnahme l\'e4uft..." : "Start"),\
        ),\
      ),\
    );\
  \}\
\}\
\pard\pardeftab720\partightenfactor0

\f1\fs24 \cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f2\fs36 \cf0 \strokec2 \uc0\u55357 \u56633 
\f0\b  
\f2\b0 3\uc0\u65039 \u8419 
\f0\b  Key Features dieses Skeletons\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls6\ilvl0
\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Start-Button
\f1\b0  
\f4 \uc0\u8594 
\f1  einmal dr\'fccken reicht\
\ls6\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Automatisches Stoppen
\f1\b0  nach 2 Sekunden Stille\
\ls6\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Whisper 
\f5 \uc0\u8594 
\f0  GPT-5 
\f5 \uc0\u8594 
\f0  ElevenLabs
\f1\b0  Pipeline\
\ls6\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Multi-Avatar Unterst\'fctzung
\f1\b0  via 
\f3\fs26 avatarId
\f1\fs24 \
\ls6\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Session-f\'e4hig
\f1\b0 : User + Avatar ID\
\ls6\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Skalierbar
\f1\b0 : Backend kann hunderte bis tausende parallele Nutzer bedienen\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Wenn du willst, kann ich dir noch 
\f0\b \strokec2 eine optimierte Version bauen
\f1\b0 \strokec2 , die:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls7\ilvl0
\f0\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Live Pegelmeter
\f1\b0  in Flutter anzeigt\
\ls7\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Avatare per Liste / Chat-UI ausw\'e4hlbar
\f1\b0 \
\ls7\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 WebSocket Streaming
\f1\b0  statt File Upload f\'fcr noch niedrigere Latenz\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Das w\'e4re dann 
\f0\b \strokec2 Produktionsreif f\'fcr 3000+ Nutzer gleichzeitig
\f1\b0 \strokec2 .\
Willst du, dass ich das direkt zeige?\
\pard\pardeftab720\partightenfactor0
\cf0 \strokec2 \
\pard\pardeftab720\sa332\partightenfactor0

\f0\b\fs20 \cf0 Du:\
\pard\pardeftab720\partightenfactor0

\f1\b0\fs24 \cf0 ok\
\
\pard\pardeftab720\sa419\partightenfactor0

\f0\b\fs18 \cf0 ChatGPT:\
\pard\pardeftab720\sa240\partightenfactor0

\f1\b0\fs24 \cf0 \strokec2 Perfekt! Dann bauen wir die 
\f0\b \strokec2 optimierte Version
\f1\b0 \strokec2 , die wirklich auf Echtzeit und Multi-User/Avatar-Szenarien ausgelegt ist. Ich erkl\'e4re erst das Konzept, dann den Code.\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f2\fs36 \cf0 \strokec2 \uc0\u55357 \u56633 
\f0\b  Architektur f\'fcr Echtzeit-Multi-Avatar-Voice-Chat\
\pard\pardeftab720\partightenfactor0

\f3\b0\fs26 \cf0 \
[Flutter App]\
   |  WebSocket Audio Stream\
   v\
[Backend Server (Node.js / FastAPI / Dart)]\
   |\
   |---> Whisper (Speech-to-Text)\
   |---> GPT-5 / Agent Logic (pro Avatar)\
   |---> ElevenLabs TTS\
   |\
   v\
[Flutter App Audio Playback]\
\pard\pardeftab720\sa240\partightenfactor0

\f0\b\fs24 \cf0 Neu gegen\'fcber vorher:
\f1\b0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls8\ilvl0
\f0\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	1	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 WebSocket Streaming
\f1\b0  statt File-Upload 
\f4 \uc0\u8594 
\f1  viel niedrige Latenz\
\ls8\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	2	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Live Pegelmeter
\f1\b0  in Flutter 
\f4 \uc0\u8594 
\f1  Visual Feedback f\'fcr Benutzer\
\ls8\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	3	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Multi-Avatar Auswahl
\f1\b0  direkt im UI\
\ls8\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	4	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Automatisches Stopp
\f1\b0  bei Stille, weiterhin optional manuell\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f2\fs36 \cf0 \strokec2 \uc0\u55357 \u56633 
\f0\b  Flutter App: Live Recording + Pegelmeter + Avatar Selection\
\pard\pardeftab720\partightenfactor0

\f3\b0\fs26 \cf0 \
import 'dart:async';\
import 'dart:io';\
import 'package:flutter/material.dart';\
import 'package:record/record.dart';\
import 'package:web_socket_channel/web_socket_channel.dart';\
import 'package:audioplayers/audioplayers.dart';\
\
void main() => runApp(MyApp());\
\
class MyApp extends StatelessWidget \{\
  @override\
  Widget build(BuildContext context) \{\
    return MaterialApp(home: VoiceChatPage());\
  \}\
\}\
\
class VoiceChatPage extends StatefulWidget \{\
  @override\
  _VoiceChatPageState createState() => _VoiceChatPageState();\
\}\
\
class _VoiceChatPageState extends State<VoiceChatPage> \{\
  final record = Record();\
  final player = AudioPlayer();\
  Timer? _silenceTimer;\
  bool isRecording = false;\
  double currentDb = 0;\
\
  String userId = "user_001";\
  String avatarId = "avatar_001";\
\
  final channel = WebSocketChannel.connect(\
      Uri.parse("ws://DEIN_BACKEND_HOST:3000/ws/audio"));\
\
  @override\
  void dispose() \{\
    _silenceTimer?.cancel();\
    channel.sink.close();\
    super.dispose();\
  \}\
\
  Future<void> startRecording() async \{\
    if (await record.hasPermission()) \{\
      await record.start(\
        encoder: AudioEncoder.pcm16,\
        bitRate: 128000,\
        samplingRate: 16000,\
      );\
      setState(() => isRecording = true);\
\
      Timer.periodic(Duration(milliseconds: 100), (timer) async \{\
        if (!isRecording) \{\
          timer.cancel();\
          return;\
        \}\
        var amp = await record.getAmplitude();\
        currentDb = amp.current ?? 0;\
        setState(() \{\}); // Aktualisiert Pegelmeter\
\
        if (currentDb < -45) \{\
          _silenceTimer ??= Timer(Duration(seconds: 2), () async \{\
            await stopRecording();\
          \});\
        \} else \{\
          _silenceTimer?.cancel();\
          _silenceTimer = null;\
        \}\
\
        // Audio Stream per WebSocket senden\
        // Achtung: Hier w\'fcrdest du kleine PCM-Chunks senden\
        // Beispiel: channel.sink.add(Uint8List.fromList(...))\
      \});\
    \}\
  \}\
\
  Future<void> stopRecording() async \{\
    var path = await record.stop();\
    setState(() => isRecording = false);\
    _silenceTimer?.cancel();\
    _silenceTimer = null;\
\
    if (path != null) \{\
      File file = File(path);\
      List<int> bytes = await file.readAsBytes();\
      channel.sink.add(bytes); // Letzter Chunk an Backend\
    \}\
  \}\
\
  // Beispiel: Auswahl von mehreren Avataren\
  void selectAvatar(String id) \{\
    setState(() => avatarId = id);\
  \}\
\
  @override\
  Widget build(BuildContext context) \{\
    return Scaffold(\
      appBar: AppBar(title: Text("Multi-Avatar Voice Chat")),\
      body: Column(\
        mainAxisAlignment: MainAxisAlignment.center,\
        children: [\
          Text("Aktueller Pegel: $\{currentDb.toStringAsFixed(1)\} dB"),\
          SizedBox(height: 20),\
          ElevatedButton(\
            onPressed: isRecording ? null : startRecording,\
            child: Text(isRecording ? "Aufnahme l\'e4uft..." : "Start"),\
          ),\
          SizedBox(height: 20),\
          Wrap(\
            spacing: 10,\
            children: [\
              ElevatedButton(onPressed: () => selectAvatar("avatar_001"), child: Text("Avatar 1")),\
              ElevatedButton(onPressed: () => selectAvatar("avatar_002"), child: Text("Avatar 2")),\
              ElevatedButton(onPressed: () => selectAvatar("avatar_003"), child: Text("Avatar 3")),\
            ],\
          ),\
        ],\
      ),\
    );\
  \}\
\}\
\pard\pardeftab720\partightenfactor0

\f1\fs24 \cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f2\fs36 \cf0 \strokec2 \uc0\u55357 \u56633 
\f0\b  Backend: WebSocket + Streaming Whisper/GPT/ElevenLabs\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls9\ilvl0
\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Node.js + ws
\f1\b0  oder FastAPI mit 
\f3\fs26 websockets
\f1\fs24 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls9\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Jeder Client \'f6ffnet 
\f0\b einen WebSocket pro Avatar
\f1\b0 \
\ls9\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Audio kommt in kleinen PCM-Chunks 
\f4 \uc0\u8594 
\f1  Whisper verarbeitet quasi 
\f0\b live
\f1\b0 \
\ls9\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Nach VAD / End-of-Speech 
\f4 \uc0\u8594 
\f1  GPT-5 antwortet 
\f4 \uc0\u8594 
\f1  ElevenLabs TTS erzeugt Audio\
\ls9\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Audio wird zur\'fcck per WebSocket an Client gesendet\
\pard\pardeftab720\sa240\partightenfactor0

\f0\b \cf0 Vorteile:
\f1\b0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls10\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Echtzeit, niedrige Latenz\
\ls10\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Tausende Nutzer parallel 
\f4 \uc0\u8594 
\f1  jede Session pro Avatar isoliert\
\ls10\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Multi-Avatar flexibel 
\f4 \uc0\u8594 
\f1  neue Avatare per Backend konfigurierbar\
\ls10\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Pegelmeter / UX Feedback direkt in Flutter\
}