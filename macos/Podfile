platform :osx, '10.15'

# CocoaPods analytics sends network stats synchronously affecting flutter build latency.
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'ephemeral', 'Flutter-Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure \"flutter pub get\" is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Flutter-Generated.xcconfig, then run \"flutter pub get\""
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_macos_podfile_setup

target 'Runner' do
  use_frameworks!

  flutter_install_all_macos_pods File.dirname(File.realpath(__FILE__))
  target 'RunnerTests' do
    inherit! :search_paths
  end
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    flutter_additional_macos_build_settings(target)
    # Erzwinge macOS Deployment Target für alle Pods, um 10.11/10.12 Warnungen zu vermeiden
    target.build_configurations.each do |config|
      config.build_settings['MACOSX_DEPLOYMENT_TARGET'] = '10.15'
    end

    # Unterdrücke Xcode-Warnung: "Create Symlinks to Header Folders will be run during every build"
    target.build_phases.each do |phase|
      if phase.is_a?(Xcodeproj::Project::Object::PBXShellScriptBuildPhase) &&
         phase.name == 'Create Symlinks to Header Folders'
        if phase.output_paths.nil? || phase.output_paths.empty?
          phase.output_paths << "$(DERIVED_FILE_DIR)/PodsHeadersSymlinks-#{target.name}"
        end
      end
    end
    # Warnungen in Pod-Targets unterdrücken und Duplicate -lc++ entfernen
    target.build_configurations.each do |config|
      config.build_settings['SWIFT_SUPPRESS_WARNINGS'] = 'YES'
      config.build_settings['GCC_WARN_INHIBIT_ALL_WARNINGS'] = 'YES'

      flags = config.build_settings['OTHER_LDFLAGS']
      if flags.is_a?(Array)
        cleaned = flags.uniq - ['-lc++', 'libc++']
        config.build_settings['OTHER_LDFLAGS'] = cleaned
      elsif flags.is_a?(String)
        parts = flags.split(' ')
        cleaned = parts.uniq - ['-lc++', 'libc++']
        config.build_settings['OTHER_LDFLAGS'] = cleaned.join(' ')
      end
    end
  end
end
